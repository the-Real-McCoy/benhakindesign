@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin hvCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin  boxShadow($box-shadow) {
-webkit-box-shadow: $box-shadow;
   -moz-box-shadow: $box-shadow;
    -ms-box-shadow: $box-shadow;
     -o-box-shadow: $box-shadow;
        box-shadow: $box-shadow;
  }

  @mixin transition($transition){
 -webkit-transition: $transition;
    -moz-transition: $transition;
     -ms-transition: $transition;
      -o-transition: $transition;
         transition: $transition;
  }  


  /* The mixin positions a copy of the text
directly on the existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
@mixin glitchCopy { 
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}




// Media Query Manager
/*
0 - 600px:      Phone
600 - 900px:    Tablet Portrait
900 - 1200ps:   Tablet Landscape
(1200 - 1800)   is where our normal styles apply
1000px +        big desktop

$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop



ORDER: Base + Typography > General layout + grid > page layout > components


*/

// 1em = 16px
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media (max-width: 37.5em) { @content }; //600px
    }
    @if $breakpoint == tab-port {
        @media (max-width: 56.25em) { @content }; //900px
    }
    @if $breakpoint == tab-land {
        @media (max-width: 75em) { @content };   //1200px
    }
    @if $breakpoint == big-desktop {
        @media (min-width: 112.5em) { @content }; //1800px
    }
}